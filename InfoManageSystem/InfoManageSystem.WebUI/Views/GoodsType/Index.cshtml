@{ 
    Layout = null;
}
<div class="container">
    <div id="toolbar" class="btn-group">
        <button id="btn_add" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>新增
        </button>
        <button id="btn_save" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-save" aria-hidden="true"></span>保存
        </button>
        <button id="btn_delete" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>删除
        </button>
        <span class="alert-danger" id="error"></span>
    </div>
    <table id="tb_user">

    </table>
</div>
@Styles.Render("~/Content/bootstrap-table")
@Scripts.Render("~/bundles/bootstrap-table")
<link rel="stylesheet" href="~/Content/css/toastr.css" />
<script src="~/Content/js/toastr.min.js"></script>
<script type="text/javascript">
    $(function () {
        $("#tb_user").bootstrapTable({
            dataType:'json',
            contentType: "application/x-www-form-urlencoded",
            toolbar: "#toolbar",
            idField: "Id",
            method: 'GET',
            pagination: true,
            showRefresh: true,
            search: true,
            clickToSelect: true,
            cache: false,
            striped: true,
            sidePagination: "server",
            showColumns: true,
            pagination: true,
            pageNumber: 1,
            pageSize: 10,
            pageList: [10, 25, 50, 100],
            uniqueId: "id",
            showExport: true,
            exportDataType: 'all',
            queryParams:queryParams,
            responseHandler: responseHandler,
            url: "/GoodsType/GetGoodsType",
            height: 450,
            columns: [{
                checkbox: true
            },
            {
                field: "Id",
                title: "类别编号"
            },
            {
                field:"Name",
                title: "类别名称",
                editable: {
                    type: 'text',
                    title: '类别名称',
                    validate: function (v) {
                        if (!v) return '类别名称不能为空';

                    }
                }
            },
            {
                field: "Description",
                title: "类别描述",
                editable: {
                    type: 'text',
                    title: '类别描述',
                    validate: function (v) {
                        if (!v) return '类别描述不能为空';
                    }
                }
                
            }],
            onEditableSave: function (field, row, oldValue, $el) {
                /*如果行数据的编号小于1的话，说明正在编辑新建的数据项，暂时不需要进行保存*/
                if (row.Id < 0)
                {
                    return;
                }
                $.ajax({
                    type: "post",
                    url: "/GoodsType/EditGoodType",
                    data: row,
                    dataType: 'JSON',
                    success: function (data, status) {
                        if (status == "success") {
                            toastr.success('编辑成功！');
                        }
                    },
                    error: function () {
                        toastr.error('编辑失败,请稍后重试！');
                        row = oldValue;
                    },
                    complete: function () {

                    }
                });
            }
        });
    });
    function queryParams(params) {
        var param = {
            typename:$(".search input").val(),
            limit: this.limit, // 页面大小
            offset: this.offset, // 页码
            pageindex: this.pageNumber,
            pageSize: this.pageSize
        }
        return param;
    }
    function responseHandler(res)
    {
        if (res) {
            return {
                "rows": res.rows,
                "total": res.total
            };
        } else {
            return {
                "rows": [],
                "total": 0
            };
        }
    }

    var delButton = $("#btn_delete");
    var table = $("#tb_user");
    delButton.click(function () {
        alert("click");
        var ids = $.map(table.bootstrapTable('getSelections'), function (row) {
            return row.Id;
        });
        table.bootstrapTable('remove', {
            field: 'Id',
            values: ids
        });
        table.bootstrapTable('refresh',{});
    });
    var addButton = $("#btn_add");
    addButton.click(function () {
        alert("add");
        table.bootstrapTable('insertRow', { index: 0, row: { Id: -1, Name: "", Description: "" } })
    });

    var saveButton = $("#btn_save");
    saveButton.click(function () {
        var rowSelected = table.bootstrapTable('getSelections');
        var to_save_items = [];
        for (var i = 0; i < rowSelected.length;i++)
        {
            row = rowSelected[i];
            if (row.Id < 0)
            {
                //如果某行数据的某列无效，不进行保存
                for(var column in row)
                {
                    if (row[column] == "") {
                        toastr.error('数据有误！')
                        return;
                    }
                }
                to_save_items.push(row);
            }
        }
        if(to_save_items.length == 0)
        {
            toastr.info("没有要进行保存的数据！");
        }
        else
        {
            for(var i=0;i<to_save_items.length;i++)
            {
                alert(to_save_items[i].name);
            }
            toastr.success("数据保存成功！")
            table.bootstrapTable('refresh', {});
        }
    });
</script>

<!--
<div class="panel-body" style="padding-bottom:0px;">
    <div class="panel panel-default">
        <div class="panel-heading">查询条件</div>
        <div class="panel-body">
            <form id="formSearch" class="form-horizontal">
                <div class="form-group" style="margin-top:15px">
                    <label class="control-label col-sm-1" for="txt_search_departmentname">部门名称</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control" id="txt_search_departmentname">
                    </div>
                    <label class="control-label col-sm-1" for="txt_search_statu">状态</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control" id="txt_search_statu">
                    </div>
                    <div class="col-sm-4" style="text-align:left;">
                        <button type="button" style="margin-left:50px" id="btn_query" class="btn btn-primary">查询</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div id="toolbar" class="btn-group">
        <button id="btn_add" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>新增
        </button>
        <button id="btn_edit" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>修改
        </button>
        <button id="btn_delete" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>删除
        </button>
    </div>
    <table id="tb_departments"></table>
</div>
<script>
    $(function()
    {
        $(".fix-table-body").removeClass("fix-table-body");
    })
</script>
<script>
    $(function () {

        //1.初始化Table
        var oTable = new TableInit();
        oTable.Init();

        //2.初始化Button的点击事件
        var oButtonInit = new ButtonInit();
        oButtonInit.Init();

    });


    var TableInit = function () {
        var oTableInit = new Object();
        //初始化Table
        oTableInit.Init = function () {
            $('#tb_departments').bootstrapTable({
                url: '/GoodsType/GetGoodsType', //请求后台的URL（*）
                method: 'get', //请求方式（*）
                toolbar: '#toolbar', //工具按钮用哪个容器
                striped: true, //是否显示行间隔色
                cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true, //是否显示分页（*）
                sortable: true, //是否启用排序
                sortOrder: "asc", //排序方式
                queryParams: oTableInit.queryParams,//传递参数（*）
                sidePagination: "server", //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1, //初始化加载第一页，默认第一页
                pageSize: 10, //每页的记录行数（*）
                pageList: [10, 25, 50, 100], //可供选择的每页的行数（*）
                search: true, //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: true,
                showColumns: true, //是否显示所有的列
                showRefresh: true, //是否显示刷新按钮
                minimumCountColumns: 2, //最少允许的列数
                clickToSelect: true, //是否启用点击选中行
                height: 500, //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                uniqueId: "ID", //每一行的唯一标识，一般为主键列
                showToggle: true, //是否显示详细视图和列表视图的切换按钮
                cardView: false, //是否显示详细视图
                detailView: false, //是否显示父子表
                columns: [{
                    checkbox: true
                }, {
                    field: 'id',
                    title: '商品编号'
                }, {
                    field: 'name',
                    title: '商品名称',
                    editable: {
                        type: 'text',
                        title: '用户名',
                        validate: function (v) {
                            if (!v) return '用户名不能为空';

                        }
                    }
                }, {
                    field: 'price',
                    title: '商品价格',
                    editable: {
                        type: 'text',
                        title: '商品价格',
                        validate: function (v) {
                            if (isNaN(v)) return '商品价格必须是整数';
                            var age = parseInt(v);
                            if (age <= 0) return '年龄必须是正整数';
                        }
                    }
                } ]
            });
        };

        //得到查询的参数
        oTableInit.queryParams = function (params) {
            var temp = { //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                limit: params.limit, //页面大小
                offset: params.offset, //页码
                departmentname: $("#txt_search_departmentname").val(),
                statu: $("#txt_search_statu").val()
            };
            return temp;
        };
        return oTableInit;
    };


    var ButtonInit = function () {
        var oInit = new Object();
        var postdata = {};

        oInit.Init = function () {
            //初始化页面上面的按钮事件
        };

        return oInit;
    };
</script>
<!--
<script type="text/javascript">
    var curRow = {};
    $(function () {
        $("#tb_user").bootstrapTable({
            toolbar: "#toolbar",
            idField: "Id",
            pagination: true,
            showRefresh: true,
            search: true,
            clickToSelect: true,
            queryParams: function (param) {
                return {};
            },
            url: "/Editable/GetUsers",
            columns: [{
                checkbox: true
            }, {
                field: "UserName",
                title: "用户名",
                formatter: function (value, row, index) {
                    return "<a href=\"#\" name=\"UserName\" data-type=\"text\" data-pk=\""+row.Id+"\" data-title=\"用户名\">" + value + "</a>";
                }
            }, {
                field: "Age",
                title: "年龄",
            }, {
                field: "Birthday",
                title: "生日",
                formatter: function (value, row, index) {
                    var date = eval('new ' + eval(value).source)
                    return date.format("yyyy年MM月dd日");
                }
            },
            {
                field: "DeptName",
                title: "部门"
            }, {
                field: "Hodd",
                title: "爱好"
            }],
            onClickRow: function (row, $element) {
                curRow = row;
            },
            onLoadSuccess: function (aa, bb, cc) {
                $("#tb_user a").editable({
                    url: function (params) {
                        var sName = $(this).attr("name");
                        curRow[sName] = params.value;
                        $.ajax({
                            type: 'POST',
                            url: "/Editable/Edit",
                            data: curRow,
                            dataType: 'JSON',
                            success: function (data, textStatus, jqXHR) {
                                alert('保存成功！');
                            },
                            error: function () { alert("error");}
                        });
                    },
                    type: 'text'
                });
            },
        });
    });
</script>
    -->